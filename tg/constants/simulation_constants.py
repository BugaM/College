from constants.robot_constants import MAX_WHEEL_SPEED
from constants.field_constants import *

FREQUENCY = 60
SIMULATION_STEPS_PER_EVALUATION = 1
RL_FREQUENCY = 15
RL_STEPS = SIMULATION_STEPS_PER_EVALUATION * (FREQUENCY//RL_FREQUENCY)


DELTA_T = 1/(FREQUENCY * SIMULATION_STEPS_PER_EVALUATION)
METERS_TO_PIXELS = 250

MAX_WHEEL_SPEED_SIM = int(METERS_TO_PIXELS * MAX_WHEEL_SPEED)

CENTER_CIRCLE_RADIUS_SIM =  int(METERS_TO_PIXELS * CENTER_CIRCLE_RADIUS)
LINE_WIDTH_SIM =  int(METERS_TO_PIXELS * LINE_WIDTH)
PENALTY_AREA_WIDTH_SIM =  int(METERS_TO_PIXELS * PENALTY_AREA_WIDTH)
PENALTY_AREA_HEIGHT_SIM =  int(METERS_TO_PIXELS * PENALTY_AREA_HEIGHT)
GOAL_WIDTH_SIM =  int(METERS_TO_PIXELS * GOAL_WIDTH)
GOAL_DEPTH_SIM =  int(METERS_TO_PIXELS * GOAL_DEPTH)
BOUNDARY_MARGIN_SIM =  int(METERS_TO_PIXELS * BOUNDARY_MARGIN)

WIDTH_SIM =  int(METERS_TO_PIXELS * WIDTH)
HEIGHT_SIM =  int(METERS_TO_PIXELS * HEIGHT)

CENTER_X_SIM = int(METERS_TO_PIXELS * CENTER_X)
CENTER_Y_SIM =  int(METERS_TO_PIXELS * CENTER_Y)

# Player
PLAYER_RADIUS_SIM =  int(METERS_TO_PIXELS * PLAYER_RADIUS)
FRONT_RADIUS_SIM =  int(METERS_TO_PIXELS * FRONT_RADIUS)

TARGET_RADIUS_SIM =  int(METERS_TO_PIXELS * TARGET_RADIUS)
TARGET_FRONT_RADIUS_SIM = int(METERS_TO_PIXELS * TARGET_FRONT_RADIUS)